# Form implementation generated from reading ui file '.\uis\prog.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(450, 600)
        MainWindow.setStyleSheet("background-color: rgb(246, 242, 255);")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.progressBar = QtWidgets.QProgressBar(parent=self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(60, 60, 360, 32))
        self.progressBar.setMaximum(0)
        self.progressBar.setProperty("value", -1)
        self.progressBar.setTextVisible(True)
        self.progressBar.setObjectName("progressBar")
        self.progressBar_2 = QtWidgets.QProgressBar(parent=self.centralwidget)
        self.progressBar_2.setGeometry(QtCore.QRect(60, 60, 32, 360))
        self.progressBar_2.setMaximum(0)
        self.progressBar_2.setProperty("value", -1)
        self.progressBar_2.setOrientation(QtCore.Qt.Orientation.Vertical)
        self.progressBar_2.setObjectName("progressBar_2")
        self.progressBar_3 = QtWidgets.QProgressBar(parent=self.centralwidget)
        self.progressBar_3.setGeometry(QtCore.QRect(60, 388, 360, 32))
        self.progressBar_3.setMaximum(0)
        self.progressBar_3.setProperty("value", -1)
        self.progressBar_3.setInvertedAppearance(True)
        self.progressBar_3.setObjectName("progressBar_3")
        self.progressBar_4 = QtWidgets.QProgressBar(parent=self.centralwidget)
        self.progressBar_4.setGeometry(QtCore.QRect(350, 60, 32, 360))
        self.progressBar_4.setMaximum(0)
        self.progressBar_4.setProperty("value", -1)
        self.progressBar_4.setOrientation(QtCore.Qt.Orientation.Vertical)
        self.progressBar_4.setInvertedAppearance(True)
        self.progressBar_4.setObjectName("progressBar_4")
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(160, 490, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.pushButton.setStyleSheet("color: rgb(246, 242, 255);\n"
"background-color: rgb(81, 2, 121);")
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "开始"))

    def apply(self):
        self.timer = QtCore.QBasicTimer()
        self.pushButton.clicked.connect(self.running)
    
    def running(self):
        # 如果当前 计时器 是活动的, 说明当前正在运行
        # 则 停止跑马灯, 并置系统为初值
        if self.timer.isActive():
            self.timer.stop()
            self.pushButton.setText("开始")
            self.progressBar.setMaximum(100)
            self.progressBar_2.setMaximum(100)
            self.progressBar_3.setMaximum(100)
            self.progressBar_4.setMaximum(100)
        else:
            self.timer.start(100, self.centralwidget)
            self.pushButton.setText("停止")
            self.progressBar.setMaximum(0)
            self.progressBar_2.setMaximum(0)
            self.progressBar_3.setMaximum(0)
            self.progressBar_4.setMaximum(0)


# 使用进度条实现类似跑马灯的效果

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    ui.apply()
    MainWindow.show()
    sys.exit(app.exec())